name: Lint and Compile

on:
  release:
    types:
      - created
  push:
  pull_request:

permissions:
  # ghcr.io
  packages: write

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-python@v5.3.0
        with:
          python-version: 3.12
      - run: pip install .[dev]
      - run: python -m ruff check --output-format=github .
  build:
    runs-on: ubuntu-22.04
    needs:
      - lint
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: actions/setup-python@v5.3.0
        with:
          python-version: 3.12
      - uses: justalemon/VersionPatcher@v0.8
        with:
          version: 0.0.1-alpha.${{ github.run_number }}
          pyproject-files: "pyproject.toml"
          initpy-files: "leek/__init__.py"
      - run: pip install .[dev]
      - run: python -m build
      - uses: actions/upload-artifact@v4.6.0
        with:
          name: ${{ github.event.repository.name }}
          path: dist/*
  docker:
    runs-on: ubuntu-22.04
    needs:
      - build
    steps:
      - uses: actions/checkout@v4.2.2
      - uses: justalemon/VersionPatcher@v0.8
        with:
          version: 0.0.1-alpha.${{ github.run_number }}
          pyproject-files: "pyproject.toml"
          initpy-files: "leek/__init__.py"
      - uses: docker/setup-buildx-action@v3.8.0
      - uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - uses: docker/metadata-action@v5.6.1
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,format=short,prefix=
            type=raw,value=latest,enable={{ is_default_branch }}
      - uses: docker/build-push-action@v6.10.0
        if: ${{ format('refs/heads/{0}', github.event.repository.default_branch) == github.ref || startsWith(github.ref, 'refs/tags/') }}
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
